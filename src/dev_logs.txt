Day 1 -> 13 June 2024;
Finally started on the website. 
Desided on the tech stack, Bun, Elysia, Htmx
Wrote up a elysia.js server file for my website, took some time to learn how to auto-download my resume
only simple routing is required for this website, hence minmal issues when writing the server
started designing desktop site, learnt more about css, especiall about animations and how flex box works.
Was able to come up with the typing animation, with reference to another persons project for the blinking cursor animation

Day 2-> 14 June 2024;
    Goals:
        1. Complete Projects Showcase
            a. Write Server-side code to read the database of projects and just select the ones i want to display and send to the htmx frontend ✔
            b. Write a update script for the database to run and collect my github repos and store it in the db. ✔
                - Side note: Maybe have an auth login site where i can select which repos i want to show and see if i want to manually edit any of the repo data.
            c. write front-end css to make the showcase look nice and attractive. ✔

        2. Write an about me to add to the website ✔

completed writing server side logic for my selected projects display. Had some issues querying a db, found out i wasnt using the sqlite library built for Bun
Started writing html for the projects div. Quite a bit to learn, in-terms of styling
Completed writing html for projects div.
Learnt quite a bit about display types, how to specify nested classes and how to open href in a different tab.

Completed writing the update script to update my github repositories. 

Wrote an about me section and added it to the webpage. Decided to add the navbar background color as the background for this div, makes the section pop out abit. 
Decided to remove the navbar for now... will see how the end result is. If needed navbar can be added


Day 3 -> 15 June 2024;
    Goals:

        1. Write Logic to check if a db file exists on server start, if db file not found, create the db file and the required tables. ✔

        2. Complete Exposures/Experiences
            a. create a db table to store the Experiences ✔
                -> Why? So that i dont need to keep updating the html everytime i want to add new experience or remove an older, less relevent experience
            b. Write server side code to read the table and send the html to the frontend ✔
            c. Write css to make it look nice        
        
        3. Start on the login page
            a. Write html for login
            b. write html for the db browser page
        

Wrote a function that will check if the db file exists and if it doesnt, creates the db file and the required tables in it. Called the funtion outside the elysia app to check everytime the server starts.
Started writing the exposures div. can reuse quite a bit of the css used in projects. Thinking about adding in the background colour similar to the one added in ther about me section 